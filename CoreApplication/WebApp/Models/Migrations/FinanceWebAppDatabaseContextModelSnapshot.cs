// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApp;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(FinanceWebAppDatabaseContext))]
    partial class FinanceWebAppDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WebApp.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PriceId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PriceId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("WebApp.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("User identication number");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("UserId"));

                    b.Property<string>("CreatedAccount")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("LastActive")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApp.Price", b =>
                {
                    b.HasOne("WebApp.Company", null)
                        .WithMany("Prices")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("WebApp.Company", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
